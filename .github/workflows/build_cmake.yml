name: CMake Build

env:
  CMAKE_VERSION: 3.20.1
  BUILD_TYPE: Debug

on:
  push:
    # branches: [master]

  pull_request:
    branches: [master]

  workflow_dispatch:

jobs:
#   build-ubuntu:
#     name: Ubuntu bundled build
#     runs-on: ubuntu-latest
#     timeout-minutes: 30
#     steps:
#     - uses: actions/checkout@v4
#     - uses: actions/setup-python@v5
#       with:
#         python-version: "3.11"

#     - name: Install conan
#       run: python3 -m pip install conan==1.60.0

#     - name: Detect Conan Defaults
#       run: |
#         conan --version

#     - name: Build
#       run: |
#         mkdir build
#         cd build
#         conan install .. --build missing
#         cmake ..
#         cmake --build . -j8

#         #- name: Verification
#         #  run: |
#         #    cd ./EXAMPLES/verification/ && ../../build/OpenSeesTcl runVerificationSuite.tcl
#     - name: Build OpenSeesPy
#       run: |
#         cd ./build
#         cmake ..
#         make -j 4
#         make OpenSeesPy
#         mkdir fake_folder
#     - name: Rename OpenSeesPy
#       run: |
#         cd ./build
#         mv lib/OpenSeesPy.so lib/opensees.so

# # Simple sanity test
#     - name: Verification OpenSeesPySP
#       run: |
#         cd ./build
#         cd ../EXAMPLES/ExamplePython/
#         export PYTHONPATH="../../build/lib/"
#         python3 -c "import sys; print(sys.path)"
#         python3 example_variable_analysis.py
#   build-mac:
#     name: Mac Build
#     runs-on: macos-latest
#     timeout-minutes: 30
#     steps:
#       - uses: actions/checkout@v4
#         with:
#           fetch-depth: 0
#       - uses: actions/setup-python@v5
#         with:
#           python-version: "3.11"
#       - name: Install Library
#         run: |
#          ln -s /opt/homebrew/bin/gcc-13 /usr/local/bin/gcc
#          ln -s /opt/homebrew/bin/gfortran-13 /usr/local/bin/gfortran
#          brew install eigen
#          brew install hdf5
#          brew install open-mpi
#          brew install scalapack
#          sudo ln -sf /opt/homebrew/include/eigen3/Eigen /opt/homebrew/include/Eigen
#       - name: Build
#         run: |
#           mkdir build
#           cd build
#           cmake .. -DMUMPS_DIR=$PWD/../../mumps/build
#           cmake --build . --target OpenSees -j8
#           cmake --build . --target OpenSeesPy -j8
#           mv ./OpenSeesPy.dylib ./opensees.so
#       - name: Verification OpenSeesPySP
#         run: |
#           export PYTHONPATH="./build/"
#           python3 -c "import sys; print(sys.path)"
#           python3 ./EXAMPLES/ExamplePython/example_variable_analysis.py

  build-win:
    name: Win Build
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - uses: ilammy/msvc-dev-cmd@v1
        with:
          vsversion: 2019
      - name: Install Intel oneAPI
        shell: pwsh
        env:
          WINDOWS_BASEKIT_URL: https://registrationcenter-download.intel.com/akdlm/IRC_NAS/7dff44ba-e3af-4448-841c-0d616c8da6e7/w_BaseKit_p_2024.1.0.595_offline.exe
          WINDOWS_BASEKIT_COMPONENTS: intel.oneapi.win.mkl.devel
          WINDOWS_HPCKIT_URL: https://registrationcenter-download.intel.com/akdlm/IRC_NAS/c95a3b26-fc45-496c-833b-df08b10297b9/w_HPCKit_p_2024.1.0.561_offline.exe
          WINDOWS_HPCKIT_COMPONENTS: "intel.oneapi.win.mpi.devel:intel.oneapi.win.ifort-compiler"
        run: |
          git clone https://github.com/z-ichinohe/oneapi-ci.git
          ./oneapi-ci/scripts/install_windows.bat $env:WINDOWS_HPCKIT_URL $env:WINDOWS_HPCKIT_COMPONENTS
          ./oneapi-ci/scripts/install_windows.bat $env:WINDOWS_BASEKIT_URL $env:WINDOWS_BASEKIT_COMPONENTS
      - name: Check Environment Variables
        shell: pwsh
        run: |
          C:\Program Files\PowerShell\7;C:\Program Files (x86)\Intel\oneAPI\mpi\latest\bin\;C:\Program Files (x86)\Intel\oneAPI\mpi\latest\bin\release\;C:\Program Files (x86)\Intel\oneAPI\mpi\latest\libfabric\bin\;C:\Program Files (x86)\Intel\oneAPI\mpi\latest\libfabric\bin\utils\;C:\Program Files (x86)\Intel\oneAPI\tbb\latest\redist\intel64\vc_mt\;C:\Program Files (x86)\Intel\oneAPI\tbb\latest\redist\ia32\vc_mt\;C:\Program Files (x86)\Intel\oneAPI\compiler\latest\windows\redist\intel64_win\compiler;C:\Program Files (x86)\Intel\oneAPI\compiler\latest\windows\redist\ia32_win\compiler;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;C:\Program Files (x86)\Intel\oneAPI\compiler\latest\windows\redist\intel64_win\compiler;C:\Program Files (x86)\Intel\oneAPI\mkl\2022.1.0\redist\intel64;C:\Program Files\nodejs\;C:\Program Files\PowerShell\7\;C:\Users\zichi\AppData\Local\Programs\Python\Python311\Scripts\;C:\Users\zichi\AppData\Local\Programs\Python\Python311\;C:\Users\zichi\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\CMake\bin;C:\Users\zichi\AppData\Roaming\npm;C:\Windows\System32;C:\Program Files (x86)\Intel\oneAPI\compiler\latest\windows\redist\intel64_win\compiler; >> $env:Path
          Get-ChildItem env:
      - name: Install MUMPS and CONAN
        shell: cmd
        run: |
            "C:\Program Files (x86)\Intel\oneAPI\setVars" intel64 mod
            git clone https://github.com/OpenSees/mumps.git
            cd mumps
            mkdir build
            cd build
            cmake .. -Darith=d -DCMAKE_MSVC_RUNTIME_LIBRARY="MultiThreaded" -G Ninja
            cmake --build . --config Release --parallel 4
            cd ..\..
            pip install conan==1.59.0
      - name: Build
        shell: cmd
        env:
          I_MPI_ONEAPI_ROOT: C:\Program Files (x86)\Intel\oneAPI\mpi\2021.6.0
          IFORT_COMPILER24: C:\Program Files (x86)\Intel\oneAPI\compiler\2024.1.0\windows\
        run: |
          cd D:\a\OpenSees\OpenSees
          mkdir build
          cd build
          conan install .. --build missing --settings compiler="Visual Studio" --settings compiler.runtime="MT" --settings compiler.version=16
          "C:\Program Files (x86)\Intel\oneAPI\setvars.bat" intel64 vs2019
          cmake .. -DBLA_STATIC=ON -DMKL_LINK=static -DMKL_INTERFACE_FULL=intel_lp64 -DMUMPS_DIR="..\..\mumps\build"
          cmake --build . --config Release --target OpenSees -j8
          cmake --build . --config Release --target OpenSeesPy -j8
      - name: Verification OpenSeesPySP
        shell: pwsh
        run: |
          mv ./build/bin/OpenSeesPy.dll ./build/bin/opensees.pyd
          $env:PYTHONPATH = "./build/bin/"
          python -c "import sys; print(sys.path)"
          python ./EXAMPLES/ExamplePython/example_variable_analysis.py
