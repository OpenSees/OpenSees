name: CMake Build

env:
  CMAKE_VERSION: 3.20.1
  BUILD_TYPE: Debug

on:
  push:
    # branches: [master]

  pull_request:
    branches: [master]

  workflow_dispatch:

jobs:
  build-ubuntu:
    name: Ubuntu bundled build
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Install conan
      run: python3 -m pip install conan==1.60.0

    - name: Detect Conan Defaults
      run: |
        conan --version

    - name: Build
      run: |
        mkdir build
        cd build
        conan install .. --build missing
        cmake ..
        cmake --build . -j8

        #- name: Verification
        #  run: |
        #    cd ./EXAMPLES/verification/ && ../../build/OpenSeesTcl runVerificationSuite.tcl
    - name: Build OpenSeesPy
      run: |
        cd ./build
        cmake ..
        make -j 4
        make OpenSeesPy
        mkdir fake_folder
    - name: Rename OpenSeesPy
      run: |
        cd ./build
        mv lib/OpenSeesPy.so lib/opensees.so

# Simple sanity test
    - name: Verification OpenSeesPySP
      run: |
        cd ./build
        cd ../EXAMPLES/ExamplePython/
        export PYTHONPATH="../../build/lib/"
        python3 -c "import sys; print(sys.path)"
        python3 example_variable_analysis.py
#        # Simple MP sanity test
#        - name: Verification OpenSeesPyMP
#          run: |
#            mpiexec -np 2 python ../EXAMPLES/ExamplePython/example_mpi_paralleltruss_explicit.py
  build-mac:
    name: Mac Build
    runs-on: macos-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install Library
        run: |
         ln -s /opt/homebrew/bin/gcc-13 /usr/local/bin/gcc
         ln -s /opt/homebrew/bin/gfortran-13 /usr/local/bin/gfortran
         brew install eigen
         brew install hdf5
         brew install open-mpi
         brew install scalapack
         sudo ln -sf /opt/homebrew/include/eigen3/Eigen /opt/homebrew/include/Eigen
      - name: Build
        run: |
          mkdir build
          cd build
          cmake .. -DMUMPS_DIR=$PWD/../../mumps/build
          cmake --build . --target OpenSees -j8
          cmake --build . --target OpenSeesPy -j8
          mv ./OpenSeesPy.dylib ./opensees.so
      - name: Verification OpenSeesPySP
        run: |
          export PYTHONPATH="./build/"
          python3 -c "import sys; print(sys.path)"
          python3 ./EXAMPLES/ExamplePython/example_variable_analysis.py

  build-win:
    name: Win Build
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - uses: ilammy/msvc-dev-cmd@v1
        with:
          vsversion: 2019
      - name: Install Intel oneAPI
        env:
          WINDOWS_BASEKIT_URL: https://registrationcenter-download.intel.com/akdlm/IRC_NAS/7dff44ba-e3af-4448-841c-0d616c8da6e7/w_BaseKit_p_2024.1.0.595_offline.exe
          WINDOWS_BASEKIT_COMPONENTS: intel.onapi.win.mkl.devel
          WINDOWS_HPCKIT_URL: https://registrationcenter-download.intel.com/akdlm/IRC_NAS/c95a3b26-fc45-496c-833b-df08b10297b9/w_HPCKit_p_2024.1.0.561_offline.exe
          WINDOWS_HPCKIT_COMPONENTS: "intel.onapi.win.mpi.devel:intel.oneapi.win.ifort-compiler"
        run: |
          git clone https://github.com/z-ichinohe/oneapi-ci.git
          ./oneapi-ci/scripts/install_windows.bat $WINDOWS_HPCKIT_URL $WINDOWS_HPCKIT_COMPONENTS
          ./oneapi-ci/scripts/install_windows.bat $WINDOWS_BASEKIT_URL $WINDOWS_BASEKIT_COMPONENTS
      - name: Setup Fortran
        id: setup-fortran
        uses: ./setup-fortran
        with:
          compiler: intel
          version: 2022.1
      - name: Install MUMPS and CONAN
        shell: pwsh
        run: |
            &"C:\Program Files (x86)\Intel\oneAPI\setVars" intel64 mod
            git clone https://github.com/OpenSees/mumps.git
            cd mumps
            mkdir build
            cd build
            cmake .. -Darith=d -DCMAKE_MSVC_RUNTIME_LIBRARY="MultiThreaded" -G Ninja
            cmake --build . --config Release --parallel 4
            cd ..\..
            pip install conan==1.59.0
      - name: Build
        shell: cmd
        run: |
          cd D:\a\OpenSees\OpenSees
          mkdir build
          cd build
          conan install .. --build missing --settings compiler="Visual Studio" --settings compiler.runtime="MT" --settings compiler.version=16
          %ComSpec% /E:ON /K ""C:\Program Files (x86)\Intel\oneAPI\setvars.bat" intel64 vs2019"
          cmake .. -DBLA_STATIC=ON -DMKL_LINK=static -DMKL_INTERFACE_FULL=intel_lp64 -DMUMPS_DIR="..\..\mumps\build"
          cmake --build . --config Release --target OpenSees -j8
          cmake --build . --config Release --target OpenSeesPy -j8
      - name: Verification OpenSeesPySP
        shell: pwsh
        run: |
          mv ./build/bin/OpenSeesPy.dll ./build/bin/opensees.pyd
          $env:PYTHONPATH = "./build/bin/"
          python -c "import sys; print(sys.path)"
          python ./EXAMPLES/ExamplePython/example_variable_analysis.py
