############################################################################
#
#  Program:  OpenSees
#
#  Purpose:  A Top-level Makefile to create the libraries needed
#            to use the OpenSees framework.
#
#   version created for SDSC datastar sequential
#
#  Written: fmk
#  Created: 01/2003
#
#
############################################################################

# %---------------------------------%
# |  SECTION 1: PROGRAM             |
# %---------------------------------%
#
# Specify the location and name of the OpenSees interpreter program
# that will be created (if this all works!)


#PROGRAMMING_MODE = SEQUENTIAL, PARALLEL, PARALLEL_INTERPRETERS
PROGRAMMING_MODE = PARALLEL_INTERPRETERS

OpenSees_PROGRAM = $(HOME)/bin/OpenSees$(PROGRAMMING_MODE)

# %---------------------------------%
# |  SECTION 2: MAKEFILE CONSTANTS  |
# %---------------------------------%
#
# Specify the constants the are used as control structure variables in the Makefiles.

OPERATING_SYSTEM = LINUX
#GRAPHICS = UsingOpenGL
GRAPHICS = NONE


#DEBUG_MODE = DEBUG, NO_DEBUG
DEBUG_MODE = NO_DEBUG

#RELIABILITY = YES_RELIABILITY, NO_RELIABILITY
RELIABILITY = NO_RELIABILITY


# %---------------------------------%
# |  SECTION 3: PATHS               |
# %---------------------------------%
#
# Note: if vendor supplied BLAS and LAPACK libraries or if you have
# any of the libraries already leave the directory location blank AND
# remove the directory from DIRS.

BASE  = 
#  PUT YOUR HOME DIRECTOREY HERE
HOME  = /home/fmckenna
FE    = $(HOME)/OpenSees/SRC


BLASdir      = $(HOME)/OpenSees/OTHER/BLAS
CBLASdir     = $(HOME)/OpenSees/OTHER/CBLAS
LAPACKdir    = $(HOME)/OpenSees/OTHER/LAPACK
ARPACKdir    = $(HOME)/OpenSees/OTHER/ARPACK
UMFPACKdir   = $(HOME)/OpenSees/OTHER/UMFPACK
METISdir     = $(HOME)/OpenSees/OTHER/METIS
SRCdir       = $(HOME)/OpenSees/SRC
SUPERLUdir   = $(HOME)/OpenSees/OTHER/SuperLU_3.0/SRC
SUPERLU_DISTdir   = $(HOME)/OpenSees/OTHER/SuperLU_DIST_2.0/SRC


DIRS        = $(SUPERLUdir) \
              $(ARPACKdir) \
              $(BLASdir) \
              $(LAPACKdir) \
              $(UMFPACKdir) \
              $(METISdir) \
              $(SRCdir) 

ifeq ($(PROGRAMMING_MODE), PARALLEL)

DIRS        = $(SUPERLUdir) \
	      $(SUPERLU_DISTdir) \
	      $(ARPACKdir) \
              $(LAPACKdir) \
              $(BLASdir) \
              $(UMFPACKdir) \
              $(METISdir) \
              $(SRCdir) 
endif

ifeq ($(PROGRAMMING_MODE), PARALLEL_INTERPRETERS)

DIRS        = $(SUPERLUdir) \
	      $(SUPERLU_DISTdir) \
              $(LAPACKdir) \
              $(ARPACKdir) \
              $(BLASdir) \
              $(UMFPACKdir) \
              $(METISdir) \
              $(SRCdir) 
endif



# %-------------------------------------------------------%
# | SECTION 4: LIBRARIES                                  |
# |                                                       |
# | The following section defines the libraries that will |
# | be created and/or linked with when the libraries are  |
# | being created or linked with.                         |
# %-------------------------------------------------------%
#
# Note: if vendor supplied BLAS and LAPACK libraries leave the
# libraries blank. You have to get your own copy of the tcl/tk 
# library!! 
#
# Note: For libraries that will be created (any in DIRS above)
# make sure the directory exsists where you want the library to go!

FE_LIBRARY          = $(HOME)/lib/libOpenSees.a
NDARRAY_LIBRARY     = $(HOME)/lib/libndarray.a  # BJ_UCD jeremic@ucdavis.edu 
MATMOD_LIBRARY      = $(HOME)/lib/libmatmod.a   # BJ_UCD jeremic@ucdavis.edu 
BJMISC_LIBRARY      = $(HOME)/lib/libBJmisc.a  # BJ_UCD jeremic@ucdavis.edu
#LAPACK_LIBRARY      =  -L/usr/local/apps/LAPACK -llapack
LAPACK_LIBRARY      = $(HOME)/lib/libLapack.a
BLAS_LIBRARY        = $(HOME)/lib/libBlas.a
SUPERLU_LIBRARY     = $(HOME)/lib/libSuperLU.a
CBLAS_LIBRARY       = $(HOME)/lib/libCBlas.a
ARPACK_LIBRARY      = $(HOME)/lib/libArpack.a
UMFPACK_LIBRARY     = $(HOME)/lib/libUmfpack.a
METIS_LIBRARY       = $(HOME)/lib/libMetis.a
DISTRIBUTED_SUPERLU_LIBRARY     = $(HOME)/lib/libDistributedSuperLU.a

TCL_LIBRARY         = -L/usr/lib/lib -ltcl8.4

GRAPHIC_LIBRARY     = 

#RELIABILITY_LIBRARY = $(HOME)/lib/libReliability.a
RELIABILITY_LIBRARY = 


# WATCH OUT .. These libraries are removed when 'make wipe' is invoked.

WIPE_LIBS	= $(FE_LIBRARY) \
           $(NDARRAY_LIBRARY) \
           $(MATMOD_LIBRARY) \
           $(SUPERLU_LIBRARY) \
           $(ARPACK_LIBRARY) \
           $(UMFPACK_LIBRARY) \
           $(METIS_LIBRARY) \
           $(LAPACK_LIBRARY) \
           $(BLAS_LIBRARY) \
           $(CBLAS_LIBRARY) \
	   $(RELIABILITY_LIBRARY)

# %---------------------------------------------------------%
# | SECTION 5: COMPILERS                                    |
# |                                                         |
# | The following macros specify compilers, linker/loaders, |
# | the archiver, and their options.  You need to make sure |
# | these are correct for your system.                      |
# %---------------------------------------------------------%

# ################################################### 
# # Compilers
# ################################################### 

CC++            =  mpiCC
CC              =  mpicc
FC              =  mpif77
F90             =  mpif90
FORTRAN             =  $(FC)
PROGRAMMING_FLAG = -D_PARALLEL_PROCESSING

ifeq ($(PROGRAMMING_MODE), SEQUENTIAL)

CC++            =  g++
CC              =  gcc
FC              =  g77
F90             =  $(FC)
FORTRAN             =  $(FC)
PROGRAMMING_FLAG = 

endif

LINKER          =  $(CC++)

MKDIR           = mkdir -p
AR		= ar 
ARCH		= ar 

ARFLAGS		= -v -q
#ARCHFLAGS       = cqls
ARCHFLAGS       = -v -q

RANLIB		= ranlib

RANLIBFLAGS     = 

GRAPHIC_FLAG = -D_NOGRAPHICS -D_GLX
GRAPHIC_FLAG = -D_NOGRAPHICS


#RELIABILITY_FLAG = -D_RELIABILITY
RELIABILITY_FLAG =

OPT_FLAG = -O3 

MUMPS_FLAG = 
PETSC_FLAG =

COMP_FLAG = 
#-pg
C++FLAGS         = -D_LINUX -D_UNIX  $(GRAPHIC_FLAG) $(RELIABILITY_FLAG) $(OPT_FLAG) $(COMP_FLAG)\
		$(PROGRAMMING_FLAG) $(PETSC_FLAG) $(MUMPS_FLAG) -D_TCL84 -cpp 

CFLAGS          = $(GRAPHIC_FLAG) $(RELIABILITY_FLAG) $(PROGRAMMING_FLAG) $(OPT_FLAG) $(COMP_FLAG) 
FFLAGS          = $(OPT_FLAG) $(COMP_FLAG) 
LINKFLAGS       =

# Misc
MAKE            = /usr/bin/gmake
CD              = cd
ECHO            = echo
RM              = rm
RMFLAGS         = -f
SHELL           = /bin/sh

# %---------------------------------------------------------%
# | SECTION 6: COMPILATION                                  |
# |                                                         |
# | The following macros specify the macros used in         |
# | to compile the source code into object code.            |
# %---------------------------------------------------------%

.SUFFIXES:
.SUFFIXES:	.C .c .f .f90 .cpp .o .cpp

#
# %------------------%
# | Default command. |
# %------------------%
#
.DEFAULT:
	@$(ECHO) "Unknown target $@, try:  make help"
#
# %-----------------------------------------------%
# |  Command to build .o files from source files. |
# %-----------------------------------------------%
#


.cpp.o: 
	@$(ECHO) Making $@ from $< $@ with $(CC++) $(C++FLAGS) $(INCLUDES) -c $<
	@$(CC++) $(C++FLAGS) $(INCLUDES) -c $<


.C.o:
	@$(ECHO) Making $@ from $<
	$(CC++) $(C++FLAGS) $(INCLUDES) -c $<

.c.o:
	@$(ECHO) Making $@ from $<
	$(CC) $(CFLAGS) $(INCLUDES) -c  $< 

.f.o:      
	@$(ECHO) Making $@ from $<
	$(FC) $(FFLAGS) -c  $< 

.f77.o:      
	@$(ECHO) Making $@ from $<
	$(FC) $(FFLAGS) -c $< 

.f90.o:      
	@$(ECHO) Making $@ from $<
	$(FC90) $(FFLAGS) -c $<

# %---------------------------------------------------------%
# | SECTION 7 OTHER OPTIONAL SOFTWARE                      |
# |                                                         |
# | The following macros specify other libraries that must  |
# | be linked with when creating executables. These are     |
# | platform specific and typically order does matter!!     |
# %---------------------------------------------------------%

#-Wl,-rpath,$(PETSC_DIR)/lib/libg/$(PETSC_ARCH) \

HAVEPETSC = NO
PETSCINC =
PETSC_LIB = 

ifeq ($(HAVEPETSC), YES)

PETSC_DIR = /usr/local/apps/petsc-2.2.1-64
PETSC_ARCH = rs6000_64
BOPT = O

PETSC = YES
PETSC_FLAG = -D_PETSC
PETSCINC = -I$(PETSC_DIR)/include -I$(PETSC_DIR)/bmake/$(PETSC_ARCH) -D_PETSC -DPETSC_USE_BOPT_g -DPETSC_USE_EXTERN_CXX

PETSC_LIB =  -L$(PETSC_DIR)/lib/libg/$(PETSC_ARCH) \
	-lpetscsnes -lpetscksp -lpetscdm -lpetscmat -lpetscvec -lpetsc \
	$(FE)/system_of_eqn/linearSOE/petsc/PetscSOE.o \
	$(FE)/system_of_eqn/linearSOE/petsc/PetscSolver.o \
	$(FE)/system_of_eqn/linearSOE/petsc/PetscSparseSeqSolver.o 

endif

HAVEMUMPS = NO
MUMPS_INCLUDE =
MUMPS_LIB = 

ifeq ($(HAVEMUMPS), YES)

MUMPS_DIR = /users/ucb/ux455280/MUMPS_4.7.3
MUMPS = YES
MUMPS_FLAG = -D_MUMPS
MUMPS_LIB = -L$(MUMPS_DIR)/lib \
	-ldmumps -lpord  -lpesslsmp -lblacssmp \
	$(FE)/system_of_eqn/linearSOE/mumps/MumpsSOE.o \
	$(FE)/system_of_eqn/linearSOE/mumps/MumpsSolver.o \
	$(FE)/system_of_eqn/linearSOE/mumps/MumpsParallelSOE.o \
	$(FE)/system_of_eqn/linearSOE/mumps/MumpsParallelSolver.o

MUMPS_INCLUDE = -I$(MUMPS_DIR)/include

endif

# %---------------------------------------------------------%
# | SECTION 8  OTHER LIBRARIES                              |
# |                                                         |
# | The following macros specify other libraries that must  |
# | be linked with when creating executables. These are     |
# | platform specific and typically order does matter!!     |
# %---------------------------------------------------------%

MACHINE_LINKLIBS  = -L$(BASE)/lib \
                    -L$(HOME)/lib 

PARALLEL_LIB = 	$(FE)/system_of_eqn/linearSOE/sparseGEN/DistributedSparseGenColLinSOE.o \
	$(FE)/system_of_eqn/linearSOE/sparseGEN/SparseGenColLinSOE.o \
	$(FE)/system_of_eqn/linearSOE/sparseGEN/DistributedSuperLU.o \
	$(DISTRIBUTED_SUPERLU_LIBRARY) \


MACHINE_NUMERICAL_LIBS  = -lm \
  $(LAPACK_LIBRARY) \
  $(ARPACK_LIBRARY) \
  $(SUPERLU_LIBRARY) \
  $(UMFPACK_LIBRARY) \
  $(PETSC_LIB) $(MUMPS_LIB) \
  $(BLAS_LIBRARY) \
  $(GRAPHIC_LIBRARY)\
  $(RELIABILITY_LIBRARY) \
  $(METIS_LIBRARY) 




#MACHINE_SPECIFIC_LIBS = -lpng -lessl -lGL -lX11 -lf
MACHINE_SPECIFIC_LIBS =  -lg2c


# %---------------------------------------------------------%
# | SECTION 8: INCLUDE FILES                                |
# |                                                         |
# | The following macros specify include files needed for   |
# | compilation.                                            |
# %---------------------------------------------------------%




MACHINE_INCLUDES        = -I/usr/local/BerkeleyDB.4.0/include \
	-I/usr/include/mysql \
	-I/usr/local/apps/hpm/include \
	-I$(HOME)/include   \
	-I$(UMFPACKdir) \
	-I$(SUPERLUdir) \
	-I$(SUPERLU_DISTdir) \
	-I/usr/lpp/ppe.poe/include $(PETSCINC) $(MUMPS_INCLUDE) 

 


# this file contains all the OpenSees/SRC includes
include $(FE)/Makefile.incl

#TCL_INCLUDES = -I/home/fmk/tcl8.3.3/generic

INCLUDES =  $(MACHINE_INCLUDES)   $(TCL_INCLUDES) $(FE_INCLUDES)
