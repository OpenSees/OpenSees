########## MACROS ###########################################################################
#############################################################################################

function(conan_message MESSAGE_OUTPUT)
    if(NOT CONAN_CMAKE_SILENT_OUTPUT)
        message(${ARGV${0}})
    endif()
endfunction()


macro(conan_find_apple_frameworks FRAMEWORKS_FOUND FRAMEWORKS FRAMEWORKS_DIRS)
    if(APPLE)
        foreach(_FRAMEWORK ${FRAMEWORKS})
            # https://cmake.org/pipermail/cmake-developers/2017-August/030199.html
            find_library(CONAN_FRAMEWORK_${_FRAMEWORK}_FOUND NAMES ${_FRAMEWORK} PATHS ${FRAMEWORKS_DIRS} CMAKE_FIND_ROOT_PATH_BOTH)
            if(CONAN_FRAMEWORK_${_FRAMEWORK}_FOUND)
                list(APPEND ${FRAMEWORKS_FOUND} ${CONAN_FRAMEWORK_${_FRAMEWORK}_FOUND})
            else()
                message(FATAL_ERROR "Framework library ${_FRAMEWORK} not found in paths: ${FRAMEWORKS_DIRS}")
            endif()
        endforeach()
    endif()
endmacro()


function(conan_package_library_targets libraries package_libdir deps out_libraries out_libraries_target build_type package_name)
    unset(_CONAN_ACTUAL_TARGETS CACHE)
    unset(_CONAN_FOUND_SYSTEM_LIBS CACHE)
    foreach(_LIBRARY_NAME ${libraries})
        find_library(CONAN_FOUND_LIBRARY NAMES ${_LIBRARY_NAME} PATHS ${package_libdir}
                     NO_DEFAULT_PATH NO_CMAKE_FIND_ROOT_PATH)
        if(CONAN_FOUND_LIBRARY)
            conan_message(STATUS "Library ${_LIBRARY_NAME} found ${CONAN_FOUND_LIBRARY}")
            list(APPEND _out_libraries ${CONAN_FOUND_LIBRARY})
            if(NOT ${CMAKE_VERSION} VERSION_LESS "3.0")
                # Create a micro-target for each lib/a found
                string(REGEX REPLACE "[^A-Za-z0-9.+_-]" "_" _LIBRARY_NAME ${_LIBRARY_NAME})
                set(_LIB_NAME CONAN_LIB::${package_name}_${_LIBRARY_NAME}${build_type})
                if(NOT TARGET ${_LIB_NAME})
                    # Create a micro-target for each lib/a found
                    add_library(${_LIB_NAME} UNKNOWN IMPORTED)
                    set_target_properties(${_LIB_NAME} PROPERTIES IMPORTED_LOCATION ${CONAN_FOUND_LIBRARY})
                    set(_CONAN_ACTUAL_TARGETS ${_CONAN_ACTUAL_TARGETS} ${_LIB_NAME})
                else()
                    conan_message(STATUS "Skipping already existing target: ${_LIB_NAME}")
                endif()
                list(APPEND _out_libraries_target ${_LIB_NAME})
            endif()
            conan_message(STATUS "Found: ${CONAN_FOUND_LIBRARY}")
        else()
            conan_message(STATUS "Library ${_LIBRARY_NAME} not found in package, might be system one")
            list(APPEND _out_libraries_target ${_LIBRARY_NAME})
            list(APPEND _out_libraries ${_LIBRARY_NAME})
            set(_CONAN_FOUND_SYSTEM_LIBS "${_CONAN_FOUND_SYSTEM_LIBS};${_LIBRARY_NAME}")
        endif()
        unset(CONAN_FOUND_LIBRARY CACHE)
    endforeach()

    if(NOT ${CMAKE_VERSION} VERSION_LESS "3.0")
        # Add all dependencies to all targets
        string(REPLACE " " ";" deps_list "${deps}")
        foreach(_CONAN_ACTUAL_TARGET ${_CONAN_ACTUAL_TARGETS})
            set_property(TARGET ${_CONAN_ACTUAL_TARGET} PROPERTY INTERFACE_LINK_LIBRARIES "${_CONAN_FOUND_SYSTEM_LIBS};${deps_list}")
        endforeach()
    endif()

    set(${out_libraries} ${_out_libraries} PARENT_SCOPE)
    set(${out_libraries_target} ${_out_libraries_target} PARENT_SCOPE)
endfunction()


########### FOUND PACKAGE ###################################################################
#############################################################################################

include(FindPackageHandleStandardArgs)

conan_message(STATUS "Conan: Using autogenerated FindHDF5.cmake")
set(HDF5_FOUND 1)
set(HDF5_VERSION "1.12.0")

find_package_handle_standard_args(HDF5 REQUIRED_VARS
                                  HDF5_VERSION VERSION_VAR HDF5_VERSION)
mark_as_advanced(HDF5_FOUND HDF5_VERSION)

set(HDF5_COMPONENTS HDF5::HL_CXX HDF5::CXX HDF5::HL HDF5::C)

if(HDF5_FIND_COMPONENTS)
    foreach(_FIND_COMPONENT ${HDF5_FIND_COMPONENTS})
        list(FIND HDF5_COMPONENTS "HDF5::${_FIND_COMPONENT}" _index)
        if(${_index} EQUAL -1)
            conan_message(FATAL_ERROR "Conan: Component '${_FIND_COMPONENT}' NOT found in package 'HDF5'")
        else()
            conan_message(STATUS "Conan: Component '${_FIND_COMPONENT}' found in package 'HDF5'")
        endif()
    endforeach()
endif()

########### VARIABLES #######################################################################
#############################################################################################


set(HDF5_INCLUDE_DIRS "/Users/runner/.conan/data/hdf5/1.12.0/_/_/package/ab133a8e58aee82aa31d6decfbfe42ab699ad2e7/include"
			"/Users/runner/.conan/data/hdf5/1.12.0/_/_/package/ab133a8e58aee82aa31d6decfbfe42ab699ad2e7/include/hdf5")
set(HDF5_INCLUDE_DIR "/Users/runner/.conan/data/hdf5/1.12.0/_/_/package/ab133a8e58aee82aa31d6decfbfe42ab699ad2e7/include;/Users/runner/.conan/data/hdf5/1.12.0/_/_/package/ab133a8e58aee82aa31d6decfbfe42ab699ad2e7/include/hdf5")
set(HDF5_INCLUDES "/Users/runner/.conan/data/hdf5/1.12.0/_/_/package/ab133a8e58aee82aa31d6decfbfe42ab699ad2e7/include"
			"/Users/runner/.conan/data/hdf5/1.12.0/_/_/package/ab133a8e58aee82aa31d6decfbfe42ab699ad2e7/include/hdf5")
set(HDF5_RES_DIRS )
set(HDF5_DEFINITIONS )
set(HDF5_LINKER_FLAGS_LIST
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,SHARED_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,MODULE_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,EXECUTABLE>:>"
)
set(HDF5_COMPILE_DEFINITIONS )
set(HDF5_COMPILE_OPTIONS_LIST "" "")
set(HDF5_COMPILE_OPTIONS_C "")
set(HDF5_COMPILE_OPTIONS_CXX "")
set(HDF5_LIBRARIES_TARGETS "") # Will be filled later, if CMake 3
set(HDF5_LIBRARIES "") # Will be filled later
set(HDF5_LIBS "") # Same as HDF5_LIBRARIES
set(HDF5_SYSTEM_LIBS )
set(HDF5_FRAMEWORK_DIRS )
set(HDF5_FRAMEWORKS )
set(HDF5_FRAMEWORKS_FOUND "") # Will be filled later
set(HDF5_BUILD_MODULES_PATHS "/Users/runner/.conan/data/hdf5/1.12.0/_/_/package/ab133a8e58aee82aa31d6decfbfe42ab699ad2e7/lib/cmake/conan-official-hdf5-targets.cmake")

conan_find_apple_frameworks(HDF5_FRAMEWORKS_FOUND "${HDF5_FRAMEWORKS}" "${HDF5_FRAMEWORK_DIRS}")

mark_as_advanced(HDF5_INCLUDE_DIRS
                 HDF5_INCLUDE_DIR
                 HDF5_INCLUDES
                 HDF5_DEFINITIONS
                 HDF5_LINKER_FLAGS_LIST
                 HDF5_COMPILE_DEFINITIONS
                 HDF5_COMPILE_OPTIONS_LIST
                 HDF5_LIBRARIES
                 HDF5_LIBS
                 HDF5_LIBRARIES_TARGETS)

# Find the real .lib/.a and add them to HDF5_LIBS and HDF5_LIBRARY_LIST
set(HDF5_LIBRARY_LIST hdf5_hl_cpp hdf5_cpp hdf5_hl hdf5)
set(HDF5_LIB_DIRS "/Users/runner/.conan/data/hdf5/1.12.0/_/_/package/ab133a8e58aee82aa31d6decfbfe42ab699ad2e7/lib")

# Gather all the libraries that should be linked to the targets (do not touch existing variables):
set(_HDF5_DEPENDENCIES "${HDF5_FRAMEWORKS_FOUND} ${HDF5_SYSTEM_LIBS} ZLIB::ZLIB")

conan_package_library_targets("${HDF5_LIBRARY_LIST}"  # libraries
                              "${HDF5_LIB_DIRS}"      # package_libdir
                              "${_HDF5_DEPENDENCIES}"  # deps
                              HDF5_LIBRARIES            # out_libraries
                              HDF5_LIBRARIES_TARGETS    # out_libraries_targets
                              ""                          # build_type
                              "HDF5")                                      # package_name

set(HDF5_LIBS ${HDF5_LIBRARIES})

foreach(_FRAMEWORK ${HDF5_FRAMEWORKS_FOUND})
    list(APPEND HDF5_LIBRARIES_TARGETS ${_FRAMEWORK})
    list(APPEND HDF5_LIBRARIES ${_FRAMEWORK})
endforeach()

foreach(_SYSTEM_LIB ${HDF5_SYSTEM_LIBS})
    list(APPEND HDF5_LIBRARIES_TARGETS ${_SYSTEM_LIB})
    list(APPEND HDF5_LIBRARIES ${_SYSTEM_LIB})
endforeach()

# We need to add our requirements too
set(HDF5_LIBRARIES_TARGETS "${HDF5_LIBRARIES_TARGETS};ZLIB::ZLIB")
set(HDF5_LIBRARIES "${HDF5_LIBRARIES};ZLIB::ZLIB")

set(CMAKE_MODULE_PATH "/Users/runner/.conan/data/hdf5/1.12.0/_/_/package/ab133a8e58aee82aa31d6decfbfe42ab699ad2e7/" ${CMAKE_MODULE_PATH})
set(CMAKE_PREFIX_PATH "/Users/runner/.conan/data/hdf5/1.12.0/_/_/package/ab133a8e58aee82aa31d6decfbfe42ab699ad2e7/" ${CMAKE_PREFIX_PATH})


########### COMPONENT C VARIABLES #############################################

set(HDF5_C_INCLUDE_DIRS "/Users/runner/.conan/data/hdf5/1.12.0/_/_/package/ab133a8e58aee82aa31d6decfbfe42ab699ad2e7/include"
			"/Users/runner/.conan/data/hdf5/1.12.0/_/_/package/ab133a8e58aee82aa31d6decfbfe42ab699ad2e7/include/hdf5")
set(HDF5_C_INCLUDE_DIR "/Users/runner/.conan/data/hdf5/1.12.0/_/_/package/ab133a8e58aee82aa31d6decfbfe42ab699ad2e7/include;/Users/runner/.conan/data/hdf5/1.12.0/_/_/package/ab133a8e58aee82aa31d6decfbfe42ab699ad2e7/include/hdf5")
set(HDF5_C_INCLUDES "/Users/runner/.conan/data/hdf5/1.12.0/_/_/package/ab133a8e58aee82aa31d6decfbfe42ab699ad2e7/include"
			"/Users/runner/.conan/data/hdf5/1.12.0/_/_/package/ab133a8e58aee82aa31d6decfbfe42ab699ad2e7/include/hdf5")
set(HDF5_C_LIB_DIRS "/Users/runner/.conan/data/hdf5/1.12.0/_/_/package/ab133a8e58aee82aa31d6decfbfe42ab699ad2e7/lib")
set(HDF5_C_RES_DIRS )
set(HDF5_C_DEFINITIONS )
set(HDF5_C_COMPILE_DEFINITIONS )
set(HDF5_C_COMPILE_OPTIONS_C "")
set(HDF5_C_COMPILE_OPTIONS_CXX "")
set(HDF5_C_LIBS hdf5)
set(HDF5_C_SYSTEM_LIBS )
set(HDF5_C_FRAMEWORK_DIRS )
set(HDF5_C_FRAMEWORKS )
set(HDF5_C_BUILD_MODULES_PATHS "/Users/runner/.conan/data/hdf5/1.12.0/_/_/package/ab133a8e58aee82aa31d6decfbfe42ab699ad2e7/lib/cmake/conan-official-hdf5-targets.cmake")
set(HDF5_C_DEPENDENCIES ZLIB::ZLIB)
set(HDF5_C_LINKER_FLAGS_LIST
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,SHARED_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,MODULE_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,EXECUTABLE>:>"
)

########### COMPONENT HL VARIABLES #############################################

set(HDF5_HL_INCLUDE_DIRS "/Users/runner/.conan/data/hdf5/1.12.0/_/_/package/ab133a8e58aee82aa31d6decfbfe42ab699ad2e7/include")
set(HDF5_HL_INCLUDE_DIR "/Users/runner/.conan/data/hdf5/1.12.0/_/_/package/ab133a8e58aee82aa31d6decfbfe42ab699ad2e7/include")
set(HDF5_HL_INCLUDES "/Users/runner/.conan/data/hdf5/1.12.0/_/_/package/ab133a8e58aee82aa31d6decfbfe42ab699ad2e7/include")
set(HDF5_HL_LIB_DIRS "/Users/runner/.conan/data/hdf5/1.12.0/_/_/package/ab133a8e58aee82aa31d6decfbfe42ab699ad2e7/lib")
set(HDF5_HL_RES_DIRS )
set(HDF5_HL_DEFINITIONS )
set(HDF5_HL_COMPILE_DEFINITIONS )
set(HDF5_HL_COMPILE_OPTIONS_C "")
set(HDF5_HL_COMPILE_OPTIONS_CXX "")
set(HDF5_HL_LIBS hdf5_hl)
set(HDF5_HL_SYSTEM_LIBS )
set(HDF5_HL_FRAMEWORK_DIRS )
set(HDF5_HL_FRAMEWORKS )
set(HDF5_HL_BUILD_MODULES_PATHS "/Users/runner/.conan/data/hdf5/1.12.0/_/_/package/ab133a8e58aee82aa31d6decfbfe42ab699ad2e7/lib/cmake/conan-official-hdf5-targets.cmake")
set(HDF5_HL_DEPENDENCIES HDF5::C)
set(HDF5_HL_LINKER_FLAGS_LIST
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,SHARED_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,MODULE_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,EXECUTABLE>:>"
)

########### COMPONENT CXX VARIABLES #############################################

set(HDF5_CXX_INCLUDE_DIRS "/Users/runner/.conan/data/hdf5/1.12.0/_/_/package/ab133a8e58aee82aa31d6decfbfe42ab699ad2e7/include")
set(HDF5_CXX_INCLUDE_DIR "/Users/runner/.conan/data/hdf5/1.12.0/_/_/package/ab133a8e58aee82aa31d6decfbfe42ab699ad2e7/include")
set(HDF5_CXX_INCLUDES "/Users/runner/.conan/data/hdf5/1.12.0/_/_/package/ab133a8e58aee82aa31d6decfbfe42ab699ad2e7/include")
set(HDF5_CXX_LIB_DIRS "/Users/runner/.conan/data/hdf5/1.12.0/_/_/package/ab133a8e58aee82aa31d6decfbfe42ab699ad2e7/lib")
set(HDF5_CXX_RES_DIRS )
set(HDF5_CXX_DEFINITIONS )
set(HDF5_CXX_COMPILE_DEFINITIONS )
set(HDF5_CXX_COMPILE_OPTIONS_C "")
set(HDF5_CXX_COMPILE_OPTIONS_CXX "")
set(HDF5_CXX_LIBS hdf5_cpp)
set(HDF5_CXX_SYSTEM_LIBS )
set(HDF5_CXX_FRAMEWORK_DIRS )
set(HDF5_CXX_FRAMEWORKS )
set(HDF5_CXX_BUILD_MODULES_PATHS "/Users/runner/.conan/data/hdf5/1.12.0/_/_/package/ab133a8e58aee82aa31d6decfbfe42ab699ad2e7/lib/cmake/conan-official-hdf5-targets.cmake")
set(HDF5_CXX_DEPENDENCIES HDF5::C)
set(HDF5_CXX_LINKER_FLAGS_LIST
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,SHARED_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,MODULE_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,EXECUTABLE>:>"
)

########### COMPONENT HL_CXX VARIABLES #############################################

set(HDF5_HL_CXX_INCLUDE_DIRS "/Users/runner/.conan/data/hdf5/1.12.0/_/_/package/ab133a8e58aee82aa31d6decfbfe42ab699ad2e7/include")
set(HDF5_HL_CXX_INCLUDE_DIR "/Users/runner/.conan/data/hdf5/1.12.0/_/_/package/ab133a8e58aee82aa31d6decfbfe42ab699ad2e7/include")
set(HDF5_HL_CXX_INCLUDES "/Users/runner/.conan/data/hdf5/1.12.0/_/_/package/ab133a8e58aee82aa31d6decfbfe42ab699ad2e7/include")
set(HDF5_HL_CXX_LIB_DIRS "/Users/runner/.conan/data/hdf5/1.12.0/_/_/package/ab133a8e58aee82aa31d6decfbfe42ab699ad2e7/lib")
set(HDF5_HL_CXX_RES_DIRS )
set(HDF5_HL_CXX_DEFINITIONS )
set(HDF5_HL_CXX_COMPILE_DEFINITIONS )
set(HDF5_HL_CXX_COMPILE_OPTIONS_C "")
set(HDF5_HL_CXX_COMPILE_OPTIONS_CXX "")
set(HDF5_HL_CXX_LIBS hdf5_hl_cpp)
set(HDF5_HL_CXX_SYSTEM_LIBS )
set(HDF5_HL_CXX_FRAMEWORK_DIRS )
set(HDF5_HL_CXX_FRAMEWORKS )
set(HDF5_HL_CXX_BUILD_MODULES_PATHS "/Users/runner/.conan/data/hdf5/1.12.0/_/_/package/ab133a8e58aee82aa31d6decfbfe42ab699ad2e7/lib/cmake/conan-official-hdf5-targets.cmake")
set(HDF5_HL_CXX_DEPENDENCIES HDF5::C HDF5::CXX HDF5::HL)
set(HDF5_HL_CXX_LINKER_FLAGS_LIST
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,SHARED_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,MODULE_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,EXECUTABLE>:>"
)


########## FIND PACKAGE DEPENDENCY ##########################################################
#############################################################################################

include(CMakeFindDependencyMacro)

if(NOT ZLIB_FOUND)
    find_dependency(ZLIB REQUIRED)
else()
    conan_message(STATUS "Conan: Dependency ZLIB already found")
endif()


########## FIND LIBRARIES & FRAMEWORKS / DYNAMIC VARS #######################################
#############################################################################################

########## COMPONENT C FIND LIBRARIES & FRAMEWORKS / DYNAMIC VARS #############

set(HDF5_C_FRAMEWORKS_FOUND "")
conan_find_apple_frameworks(HDF5_C_FRAMEWORKS_FOUND "${HDF5_C_FRAMEWORKS}" "${HDF5_C_FRAMEWORK_DIRS}")

set(HDF5_C_LIB_TARGETS "")
set(HDF5_C_NOT_USED "")
set(HDF5_C_LIBS_FRAMEWORKS_DEPS ${HDF5_C_FRAMEWORKS_FOUND} ${HDF5_C_SYSTEM_LIBS} ${HDF5_C_DEPENDENCIES})
conan_package_library_targets("${HDF5_C_LIBS}"
                              "${HDF5_C_LIB_DIRS}"
                              "${HDF5_C_LIBS_FRAMEWORKS_DEPS}"
                              HDF5_C_NOT_USED
                              HDF5_C_LIB_TARGETS
                              ""
                              "HDF5_C")

set(HDF5_C_LINK_LIBS ${HDF5_C_LIB_TARGETS} ${HDF5_C_LIBS_FRAMEWORKS_DEPS})

set(CMAKE_MODULE_PATH "/Users/runner/.conan/data/hdf5/1.12.0/_/_/package/ab133a8e58aee82aa31d6decfbfe42ab699ad2e7/" ${CMAKE_MODULE_PATH})
set(CMAKE_PREFIX_PATH "/Users/runner/.conan/data/hdf5/1.12.0/_/_/package/ab133a8e58aee82aa31d6decfbfe42ab699ad2e7/" ${CMAKE_PREFIX_PATH})

########## COMPONENT HL FIND LIBRARIES & FRAMEWORKS / DYNAMIC VARS #############

set(HDF5_HL_FRAMEWORKS_FOUND "")
conan_find_apple_frameworks(HDF5_HL_FRAMEWORKS_FOUND "${HDF5_HL_FRAMEWORKS}" "${HDF5_HL_FRAMEWORK_DIRS}")

set(HDF5_HL_LIB_TARGETS "")
set(HDF5_HL_NOT_USED "")
set(HDF5_HL_LIBS_FRAMEWORKS_DEPS ${HDF5_HL_FRAMEWORKS_FOUND} ${HDF5_HL_SYSTEM_LIBS} ${HDF5_HL_DEPENDENCIES})
conan_package_library_targets("${HDF5_HL_LIBS}"
                              "${HDF5_HL_LIB_DIRS}"
                              "${HDF5_HL_LIBS_FRAMEWORKS_DEPS}"
                              HDF5_HL_NOT_USED
                              HDF5_HL_LIB_TARGETS
                              ""
                              "HDF5_HL")

set(HDF5_HL_LINK_LIBS ${HDF5_HL_LIB_TARGETS} ${HDF5_HL_LIBS_FRAMEWORKS_DEPS})

set(CMAKE_MODULE_PATH "/Users/runner/.conan/data/hdf5/1.12.0/_/_/package/ab133a8e58aee82aa31d6decfbfe42ab699ad2e7/" ${CMAKE_MODULE_PATH})
set(CMAKE_PREFIX_PATH "/Users/runner/.conan/data/hdf5/1.12.0/_/_/package/ab133a8e58aee82aa31d6decfbfe42ab699ad2e7/" ${CMAKE_PREFIX_PATH})

########## COMPONENT CXX FIND LIBRARIES & FRAMEWORKS / DYNAMIC VARS #############

set(HDF5_CXX_FRAMEWORKS_FOUND "")
conan_find_apple_frameworks(HDF5_CXX_FRAMEWORKS_FOUND "${HDF5_CXX_FRAMEWORKS}" "${HDF5_CXX_FRAMEWORK_DIRS}")

set(HDF5_CXX_LIB_TARGETS "")
set(HDF5_CXX_NOT_USED "")
set(HDF5_CXX_LIBS_FRAMEWORKS_DEPS ${HDF5_CXX_FRAMEWORKS_FOUND} ${HDF5_CXX_SYSTEM_LIBS} ${HDF5_CXX_DEPENDENCIES})
conan_package_library_targets("${HDF5_CXX_LIBS}"
                              "${HDF5_CXX_LIB_DIRS}"
                              "${HDF5_CXX_LIBS_FRAMEWORKS_DEPS}"
                              HDF5_CXX_NOT_USED
                              HDF5_CXX_LIB_TARGETS
                              ""
                              "HDF5_CXX")

set(HDF5_CXX_LINK_LIBS ${HDF5_CXX_LIB_TARGETS} ${HDF5_CXX_LIBS_FRAMEWORKS_DEPS})

set(CMAKE_MODULE_PATH "/Users/runner/.conan/data/hdf5/1.12.0/_/_/package/ab133a8e58aee82aa31d6decfbfe42ab699ad2e7/" ${CMAKE_MODULE_PATH})
set(CMAKE_PREFIX_PATH "/Users/runner/.conan/data/hdf5/1.12.0/_/_/package/ab133a8e58aee82aa31d6decfbfe42ab699ad2e7/" ${CMAKE_PREFIX_PATH})

########## COMPONENT HL_CXX FIND LIBRARIES & FRAMEWORKS / DYNAMIC VARS #############

set(HDF5_HL_CXX_FRAMEWORKS_FOUND "")
conan_find_apple_frameworks(HDF5_HL_CXX_FRAMEWORKS_FOUND "${HDF5_HL_CXX_FRAMEWORKS}" "${HDF5_HL_CXX_FRAMEWORK_DIRS}")

set(HDF5_HL_CXX_LIB_TARGETS "")
set(HDF5_HL_CXX_NOT_USED "")
set(HDF5_HL_CXX_LIBS_FRAMEWORKS_DEPS ${HDF5_HL_CXX_FRAMEWORKS_FOUND} ${HDF5_HL_CXX_SYSTEM_LIBS} ${HDF5_HL_CXX_DEPENDENCIES})
conan_package_library_targets("${HDF5_HL_CXX_LIBS}"
                              "${HDF5_HL_CXX_LIB_DIRS}"
                              "${HDF5_HL_CXX_LIBS_FRAMEWORKS_DEPS}"
                              HDF5_HL_CXX_NOT_USED
                              HDF5_HL_CXX_LIB_TARGETS
                              ""
                              "HDF5_HL_CXX")

set(HDF5_HL_CXX_LINK_LIBS ${HDF5_HL_CXX_LIB_TARGETS} ${HDF5_HL_CXX_LIBS_FRAMEWORKS_DEPS})

set(CMAKE_MODULE_PATH "/Users/runner/.conan/data/hdf5/1.12.0/_/_/package/ab133a8e58aee82aa31d6decfbfe42ab699ad2e7/" ${CMAKE_MODULE_PATH})
set(CMAKE_PREFIX_PATH "/Users/runner/.conan/data/hdf5/1.12.0/_/_/package/ab133a8e58aee82aa31d6decfbfe42ab699ad2e7/" ${CMAKE_PREFIX_PATH})


########## TARGETS ##########################################################################
#############################################################################################

########## COMPONENT C TARGET #################################################

if(NOT ${CMAKE_VERSION} VERSION_LESS "3.0")
    # Target approach
    if(NOT TARGET HDF5::C)
        add_library(HDF5::C INTERFACE IMPORTED)
        set_target_properties(HDF5::C PROPERTIES INTERFACE_INCLUDE_DIRECTORIES
                              "${HDF5_C_INCLUDE_DIRS}")
        set_target_properties(HDF5::C PROPERTIES INTERFACE_LINK_DIRECTORIES
                              "${HDF5_C_LIB_DIRS}")
        set_target_properties(HDF5::C PROPERTIES INTERFACE_LINK_LIBRARIES
                              "${HDF5_C_LINK_LIBS};${HDF5_C_LINKER_FLAGS_LIST}")
        set_target_properties(HDF5::C PROPERTIES INTERFACE_COMPILE_DEFINITIONS
                              "${HDF5_C_COMPILE_DEFINITIONS}")
        set_target_properties(HDF5::C PROPERTIES INTERFACE_COMPILE_OPTIONS
                              "${HDF5_C_COMPILE_OPTIONS_C};${HDF5_C_COMPILE_OPTIONS_CXX}")
    endif()
endif()

########## COMPONENT HL TARGET #################################################

if(NOT ${CMAKE_VERSION} VERSION_LESS "3.0")
    # Target approach
    if(NOT TARGET HDF5::HL)
        add_library(HDF5::HL INTERFACE IMPORTED)
        set_target_properties(HDF5::HL PROPERTIES INTERFACE_INCLUDE_DIRECTORIES
                              "${HDF5_HL_INCLUDE_DIRS}")
        set_target_properties(HDF5::HL PROPERTIES INTERFACE_LINK_DIRECTORIES
                              "${HDF5_HL_LIB_DIRS}")
        set_target_properties(HDF5::HL PROPERTIES INTERFACE_LINK_LIBRARIES
                              "${HDF5_HL_LINK_LIBS};${HDF5_HL_LINKER_FLAGS_LIST}")
        set_target_properties(HDF5::HL PROPERTIES INTERFACE_COMPILE_DEFINITIONS
                              "${HDF5_HL_COMPILE_DEFINITIONS}")
        set_target_properties(HDF5::HL PROPERTIES INTERFACE_COMPILE_OPTIONS
                              "${HDF5_HL_COMPILE_OPTIONS_C};${HDF5_HL_COMPILE_OPTIONS_CXX}")
    endif()
endif()

########## COMPONENT CXX TARGET #################################################

if(NOT ${CMAKE_VERSION} VERSION_LESS "3.0")
    # Target approach
    if(NOT TARGET HDF5::CXX)
        add_library(HDF5::CXX INTERFACE IMPORTED)
        set_target_properties(HDF5::CXX PROPERTIES INTERFACE_INCLUDE_DIRECTORIES
                              "${HDF5_CXX_INCLUDE_DIRS}")
        set_target_properties(HDF5::CXX PROPERTIES INTERFACE_LINK_DIRECTORIES
                              "${HDF5_CXX_LIB_DIRS}")
        set_target_properties(HDF5::CXX PROPERTIES INTERFACE_LINK_LIBRARIES
                              "${HDF5_CXX_LINK_LIBS};${HDF5_CXX_LINKER_FLAGS_LIST}")
        set_target_properties(HDF5::CXX PROPERTIES INTERFACE_COMPILE_DEFINITIONS
                              "${HDF5_CXX_COMPILE_DEFINITIONS}")
        set_target_properties(HDF5::CXX PROPERTIES INTERFACE_COMPILE_OPTIONS
                              "${HDF5_CXX_COMPILE_OPTIONS_C};${HDF5_CXX_COMPILE_OPTIONS_CXX}")
    endif()
endif()

########## COMPONENT HL_CXX TARGET #################################################

if(NOT ${CMAKE_VERSION} VERSION_LESS "3.0")
    # Target approach
    if(NOT TARGET HDF5::HL_CXX)
        add_library(HDF5::HL_CXX INTERFACE IMPORTED)
        set_target_properties(HDF5::HL_CXX PROPERTIES INTERFACE_INCLUDE_DIRECTORIES
                              "${HDF5_HL_CXX_INCLUDE_DIRS}")
        set_target_properties(HDF5::HL_CXX PROPERTIES INTERFACE_LINK_DIRECTORIES
                              "${HDF5_HL_CXX_LIB_DIRS}")
        set_target_properties(HDF5::HL_CXX PROPERTIES INTERFACE_LINK_LIBRARIES
                              "${HDF5_HL_CXX_LINK_LIBS};${HDF5_HL_CXX_LINKER_FLAGS_LIST}")
        set_target_properties(HDF5::HL_CXX PROPERTIES INTERFACE_COMPILE_DEFINITIONS
                              "${HDF5_HL_CXX_COMPILE_DEFINITIONS}")
        set_target_properties(HDF5::HL_CXX PROPERTIES INTERFACE_COMPILE_OPTIONS
                              "${HDF5_HL_CXX_COMPILE_OPTIONS_C};${HDF5_HL_CXX_COMPILE_OPTIONS_CXX}")
    endif()
endif()

########## GLOBAL TARGET ####################################################################

if(NOT ${CMAKE_VERSION} VERSION_LESS "3.0")
    if(NOT TARGET HDF5::HDF5)
        add_library(HDF5::HDF5 INTERFACE IMPORTED)
    endif()
    set_property(TARGET HDF5::HDF5 APPEND PROPERTY
                 INTERFACE_LINK_LIBRARIES "${HDF5_COMPONENTS}")
endif()

########## BUILD MODULES ####################################################################
#############################################################################################
########## COMPONENT C BUILD MODULES ##########################################

foreach(_BUILD_MODULE_PATH ${HDF5_C_BUILD_MODULES_PATHS})
    include(${_BUILD_MODULE_PATH})
endforeach()
########## COMPONENT HL BUILD MODULES ##########################################

foreach(_BUILD_MODULE_PATH ${HDF5_HL_BUILD_MODULES_PATHS})
    include(${_BUILD_MODULE_PATH})
endforeach()
########## COMPONENT CXX BUILD MODULES ##########################################

foreach(_BUILD_MODULE_PATH ${HDF5_CXX_BUILD_MODULES_PATHS})
    include(${_BUILD_MODULE_PATH})
endforeach()
########## COMPONENT HL_CXX BUILD MODULES ##########################################

foreach(_BUILD_MODULE_PATH ${HDF5_HL_CXX_BUILD_MODULES_PATHS})
    include(${_BUILD_MODULE_PATH})
endforeach()
